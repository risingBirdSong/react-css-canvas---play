{"version":3,"sources":["components/fishook.tsx","components/hexagonalTut.tsx","components/Canvas.tsx","components/animationCanvas.tsx","components/cssplay.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HOOK_PATH","Path2D","FishHook","canvasRef","useRef","ref","width","window","innerWidth","height","innerHeight","onClick","e","ctx","location","fillStyle","shadowColor","shadowBlur","save","scale","translate","x","y","fill","restore","draw","current","getContext","clientX","clientY","Hexa","props","canvasHex","state","canvasSize","canvasWidth","canvasHeight","hexSize","this","drawHex","canvasID","center","i","start","getHex","end","drawLine","beginPath","moveTo","lineTo","stroke","closePath","angle_deg","angle_rad","Math","PI","cos","sin","React","Component","Canvas","createRef","angle","canvas","clearRect","rotate","fillRect","Animation","rAF","updateAnimationState","setState","prevState","rateOfRotate","requestAnimationFrame","cancelAnimationFrame","CssPlay","className","App","useState","fishHookToggle","setFishHook","hexaToggle","setHexa","animationToggle","setAnimation","currentDisplay","setDisplay","option","chooseOne","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2f3a422.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\n\r\nimport logo from './logo.svg';\r\n// import './App.css';\r\n\r\nconst HOOK_SVG = 'm129.03125 63.3125c0-34.914062-28.941406-63.3125-64.519531-63.3125-35.574219 0-64.511719 28.398438-64.511719 63.3125 0 29.488281 20.671875 54.246094 48.511719 61.261719v162.898437c0 53.222656 44.222656 96.527344 98.585937 96.527344h10.316406c54.363282 0 98.585938-43.304688 98.585938-96.527344v-95.640625c0-7.070312-4.640625-13.304687-11.414062-15.328125-6.769532-2.015625-14.082032.625-17.960938 6.535156l-42.328125 64.425782c-4.847656 7.390625-2.800781 17.3125 4.582031 22.167968 7.386719 4.832032 17.304688 2.792969 22.160156-4.585937l12.960938-19.71875v42.144531c0 35.582032-29.863281 64.527344-66.585938 64.527344h-10.316406c-36.714844 0-66.585937-28.945312-66.585937-64.527344v-162.898437c27.847656-7.015625 48.519531-31.773438 48.519531-61.261719zm-97.03125 0c0-17.265625 14.585938-31.3125 32.511719-31.3125 17.929687 0 32.511719 14.046875 32.511719 31.3125 0 17.261719-14.582032 31.3125-32.511719 31.3125-17.925781 0-32.511719-14.050781-32.511719-31.3125zm0 0'\r\nconst HOOK_PATH = new Path2D(HOOK_SVG)\r\nconst SCALE = 0.3\r\nconst OFFSET = 80\r\nfunction draw(ctx, location) {\r\n  ctx.fillStyle = 'deepskyblue';\r\n  ctx.shadowColor = 'dodgerblue';\r\n  ctx.shadowBlur = 20; ctx.save();\r\n  ctx.scale(SCALE, SCALE); ctx.translate(location.x / SCALE - OFFSET, location.y / SCALE - OFFSET);\r\n  ctx.fill(HOOK_PATH);\r\n  ctx.restore();\r\n}\r\n\r\n\r\nfunction FishHook() {\r\n  const canvasRef = useRef(null);\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={window.innerWidth}\r\n      height={window.innerHeight}\r\n      onClick={e => {\r\n        const canvas = canvasRef.current;\r\n        //@ts-ignore\r\n        const ctx = canvas.getContext('2d');\r\n        draw(ctx, { x: e.clientX, y: e.clientY });\r\n        // implement draw on ctx here\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FishHook;\r\n","import React from \"react\";\r\n\r\ninterface canvasState {\r\n  canvasSize: {\r\n    canvasWidth: number,\r\n    canvasHeight: number\r\n  }\r\n  hexSize: number\r\n}\r\n\r\ninterface canvasProps {\r\n  width?: number,\r\n  height?: number\r\n}\r\n\r\ninterface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\n\r\nclass Hexa extends React.Component<canvasProps, canvasState> {\r\n  canvasHex: canvasProps;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      canvasSize: { canvasWidth: window.innerWidth, canvasHeight: window.innerHeight },\r\n      hexSize: 20,\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { canvasWidth, canvasHeight } = this.state.canvasSize;\r\n    this.canvasHex.width = canvasWidth;\r\n    this.canvasHex.height = canvasHeight;\r\n    this.drawHex(this.canvasHex, { x: 50, y: 50 })\r\n  }\r\n\r\n\r\n  drawHex(canvasID, center: Point) {\r\n    for (let i = 0; i <= 5; i++) {\r\n      let start = this.getHex(center, i);\r\n      let end = this.getHex(center, i + 1);\r\n      this.drawLine(canvasID, { x: start.x, y: start.y }, { x: end.x, y: end.y })\r\n    }\r\n  }\r\n\r\n  drawLine(canvasID, start: Point, end: Point) {\r\n    let ctx = canvasID.getContext(\"2d\");\r\n    ctx.beginPath();\r\n    ctx.moveTo(start.x, start.y);\r\n    ctx.lineTo(end.x, end.y);\r\n    ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n\r\n  getHex(center: Point, i: number) {\r\n    let angle_deg = 60 * i - 30;\r\n    let angle_rad = Math.PI / 180 * angle_deg;\r\n    let x = center.x + this.state.hexSize * Math.cos(angle_rad);\r\n    let y = center.y + this.state.hexSize * Math.sin(angle_rad);\r\n    return { x, y }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <canvas ref={canvasHex => this.canvasHex = canvasHex}></canvas>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Hexa;\r\n","import React from \"react\";\r\n\r\ninterface canvasProps {\r\n  angle?: number;\r\n}\r\n\r\nclass Canvas extends React.Component<canvasProps>{\r\n  canvasRef: React.RefObject<HTMLCanvasElement>;\r\n  constructor(props: canvasProps) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n  }\r\n  componentDidUpdate() {\r\n    const { angle } = this.props;\r\n    const canvas = this.canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const width = canvas.width ?? 100;\r\n    const height = canvas.height ?? 100;\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.clearRect(0, 0, width, height);\r\n    ctx.translate(width / 2, height / 2);\r\n    ctx.rotate((angle * Math.PI) / 180);\r\n    ctx.fillStyle = \"blue\";\r\n    // how are these numbers arrived at?\r\n    //original - stable axis\r\n    ctx.fillRect(-width / 4, -height / 4, width / 2, height / 2);\r\n    //some cool axis rotation\r\n    // ctx.fillRect(-width / 4, -height / 4, width / 4, height / 4);\r\n    //oh interesting try commenting out ctx.restore, its just choppy movements...\r\n    ctx.restore();\r\n  }\r\n  render() {\r\n    return (\r\n      <canvas width=\"300\" height=\"300\" ref={this.canvasRef}></canvas>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Canvas;","import React from \"react\";\r\nimport Canvas from \"./Canvas\";\r\n\r\ninterface animationProps {\r\n  rateOfRotate: number;\r\n}\r\ninterface animationState {\r\n  angle: number;\r\n}\r\n\r\nclass Animation extends React.Component<animationProps, animationState> {\r\n  rAF;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { angle: 0 };\r\n    //not necessary with arrow function\r\n    // this.updateAnimationState = this.updateAnimationState.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.rAF = requestAnimationFrame(this.updateAnimationState);\r\n  }\r\n\r\n  updateAnimationState = () => {\r\n    this.setState(prevState => ({ angle: prevState.angle + this.props.rateOfRotate }));\r\n    this.rAF = requestAnimationFrame(this.updateAnimationState);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    cancelAnimationFrame(this.rAF);\r\n  }\r\n\r\n  render() {\r\n    return <Canvas angle={this.state.angle} />;\r\n  }\r\n}\r\n\r\nexport default Animation;","import React from \"react\";\r\n\r\nclass CssPlay extends React.Component<{}, {}>{\r\n  render() {\r\n    return (\r\n      <div className=\"CssPlay\">\r\n        <h2></h2>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CssPlay;","import React, { useState } from 'react';\nimport FishHook from \"./components/fishook\";\nimport TestComponent from \"./components/testComponent\";\nimport Hexa from \"./components/hexagonalTut\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Animation from \"./components/animationCanvas\";\nimport Canvas from \"./components/Canvas\";\nimport CssPlay from \"./components/cssplay\";\n\n\nfunction App() {\n  const [fishHookToggle, setFishHook] = useState(false);\n  const [hexaToggle, setHexa] = useState(false);\n  const [animationToggle, setAnimation] = useState(false);\n\n  const [currentDisplay, setDisplay] = useState(\"\");\n\n  function chooseOne(option: string) {\n    switch (option) {\n      case \"fishHook\":\n        return <FishHook />;\n      case \"hexa\":\n        return <Hexa />;\n      case \"animation\":\n        return <div>\n          <h2>all these rotations</h2>\n          <Animation rateOfRotate={1} />\n          <Animation rateOfRotate={2} />\n          <Animation rateOfRotate={3} />\n          <Animation rateOfRotate={4} />\n          <Animation rateOfRotate={5} />\n          <Animation rateOfRotate={6} />\n          <Animation rateOfRotate={7} />\n          <Animation rateOfRotate={8} />\n          <Animation rateOfRotate={9} />\n          <Animation rateOfRotate={10} />\n          <Animation rateOfRotate={11} />\n          <Animation rateOfRotate={12} />\n          <Animation rateOfRotate={13} />\n          <Animation rateOfRotate={14} />\n          <Animation rateOfRotate={15} />\n        </div>\n      case \"CssPlay\":\n        return <CssPlay />\n    }\n  }\n\n  return (\n    <div>\n      <h1>welcome</h1>\n      <button onClick={() => { setFishHook(!fishHookToggle); setDisplay(\"fishHook\") }}>fish hooh</button>\n      <button onClick={() => { setHexa(!hexaToggle); setDisplay(\"hexa\") }}> hexa </button>\n      <button onClick={() => { setAnimation(!animationToggle); setDisplay(\"animation\") }}> animation </button>\n      <button onClick={() => setDisplay(\"CssPlay\")}> CssPlay </button>\n\n      <div>\n        <h2>set display test -> {currentDisplay}</h2>\n      </div>\n\n      {chooseOne(currentDisplay)}\n\n      <div className=\"CssPlay\">\n        <h1 className=\"lemon a\"></h1>\n        <h1 className=\"lemon b\"></h1>\n        <h1 className=\"lemon c\"></h1>\n        <h1 className=\"lemon d\"></h1>\n        <h1 className=\"lemon e\"></h1>\n        <h1 className=\"lemon f\"></h1>\n        <h1 className=\"lemon g\"></h1>\n        <h1 className=\"lemon h\"></h1>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}